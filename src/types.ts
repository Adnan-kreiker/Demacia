import { App } from 'vue'
import { Router, RouteRecordRaw } from 'vue-router'
import { HeadClient } from '@vueuse/head'

interface AppContext<HasRouter extends boolean = true> {
  app: App<Element>
  router: HasRouter extends true ? Router : undefined
  routes: HasRouter extends true ? RouteRecordRaw[] : undefined
  head: HeadClient | undefined
}

export type UserModule = (ctx: AppContext) => void

export interface Champion {
  version: string
  id: string
  key: string
  name: string
  title: string
  blurb: string
  info: {
    attack: number
    defense: number
    magic: number
    difficulty: number
  }
  image: {
    full: string
    sprite: string
    group: string
    x: number
    y: number
    w: number
    h: number
  }
  tags: string[]
  partype: string
  stats: { [key: string]: number }
}

// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"
export interface Leveltip {
  label: string[]
  effect: string[]
}
export interface Datavalues {
}

export interface Skin {
  id: string
  num: number
  name: string
  chromas: boolean
}
export interface Image {
  full: string
  sprite: string
  group: string
  x: number
  y: number
  w: number
  h: number
}
export interface Spell {
  id: string
  name: string
  description: string
  tooltip: string
  leveltip: Leveltip
  maxrank: number
  cooldown: number[]
  cooldownBurn: string
  cost: number[]
  costBurn: string
  datavalues: Datavalues
  effect: Array<number[] | null>
  effectBurn: Array<null | string>
  vars: any[]
  costType: string
  maxammo: string
  range: number[]
  rangeBurn: string
  image: Image
  resource: string
}
export interface Info {
  attack: number
  defense: number
  magic: number
  difficulty: number
}
export interface ChampionInfo {
  id: string
  key: string
  name: string
  title: string
  image: {
    full: string
    sprite: string
    group: string
    x: number
    y: number
    w: number
    h: number
  }
  skins: Skin[]
  lore: string
  blurb: string
  allytips: string[]
  enemytips: string[]
  tags: string[]
  partype: string
  info: Info
  stats: { [key: string]: number }
  spells: Spell[]
  passive: {
    name: string
    description: string
    image: Image
  }
  recommended: any[]
}

export interface Passive {
  name: string
  description: string
  image: Image
}
